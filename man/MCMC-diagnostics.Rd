% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc-diagnostics.R
\name{MCMC-diagnostics}
\alias{MCMC-diagnostics}
\alias{mcmc_acf}
\alias{mcmc_acf_bar}
\alias{mcmc_neff}
\alias{mcmc_neff_hist}
\alias{mcmc_rhat}
\alias{mcmc_rhat_hist}
\title{Autocorrelation, Rhat, and effective sample size}
\usage{
mcmc_rhat(rhat, ..., size = NULL)

mcmc_rhat_hist(rhat, ..., binwidth = NULL)

mcmc_neff(ratio, ..., size = NULL)

mcmc_neff_hist(ratio, ..., binwidth = NULL)

mcmc_acf(x, pars = character(), regex_pars = character(),
  facet_args = list(), ..., lags = 20, size = NULL)

mcmc_acf_bar(x, pars = character(), regex_pars = character(),
  facet_args = list(), ..., lags = 20)
}
\arguments{
\item{rhat}{A vector of \code{\link[=rhat]{Rhat}} estimates.}

\item{...}{Currently ignored.}

\item{size}{An optional value to override \code{\link[ggplot2]{geom_point}}'s
default size (for \code{mcmc_rhat}, \code{mcmc_neff}) or
\code{\link[ggplot2]{geom_line}}'s default size (for \code{mcmc_acf}).}

\item{binwidth}{An optional value to override
\code{\link[ggplot2]{geom_histogram}}'s default binwidth.}

\item{ratio}{A vector of \emph{ratios} of effective sample size estimates to
total sample size. See \code{\link{neff_ratio}}.}

\item{x}{A 3-D array, matrix, or data frame of posterior draws:
\itemize{
 \item \strong{3-D array}: An \code{\link{array}} with dimensions
 \code{[Iteration, Chain, Parameter]} in that order.
 \item \strong{matrix}: A \code{\link{matrix}} with one column per
 parameter. If \code{x} is a matrix then there should only be a single
 Markov chain or all chains should already be merged (stacked).
 \item \strong{data frame}: There are two types of data frames allowed.
 Either a data frame with one column per parameter (if only a single chain or
 all chains have already been merged), or a data frame with one column per
 parameter plus an additional column \code{"Chain"} that contains the chain
 number (an integer) corresponding to each row in \code{x}.
 \item \strong{list}: A \code{list} of matrices, where each matrix
 corresponds to a Markov chain. All of the matrices should have the same
 number of iterations (rows) and parameters (columns), and parameters should
 have the same names and be in the same order.
}}

\item{pars}{An optional character vector of parameter names. If neither
\code{pars} nor \code{regex_pars} is specified then the default is to use
\emph{all} parameters.}

\item{regex_pars}{An optional \link[=grep]{regular expression} to use for
parameter selection. Can be specified instead of \code{pars} or in addition
to \code{pars}.}

\item{facet_args}{Arguments (other than \code{facets}) passed to
\code{\link[ggplot2]{facet_grid}} to control faceting.}

\item{lags}{The number of lags to show in the autocorrelation plot.}
}
\value{
A ggplot object that can be further customized using the
  \pkg{ggplot2} package.
}
\description{
Plots of Rhat statistics, ratios of effective sample size to total sample
size, and autocorrelation of MCMC draws. See the \strong{Plot Descriptions}
section, below, for details.
}
\section{Plot Descriptions}{

\describe{
\item{\code{mcmc_rhat, mcmc_rhat_hist}}{
Rhat values as either points or a histogram. Values are
colored using different shades (lighter is better):
 \itemize{
   \item \emph{light}: below 1.05 (good)
   \item \emph{mid}: between 1.05 and 1.1 (ok)
   \item \emph{dark}: above 1.1 (too high)
 }
}
\item{\code{mcmc_neff, mcmc_neff_hist}}{
Ratios of effective sample size to total sample size as either points or a
histogram. Values are colored using different shades (lighter is better):
 \itemize{
   \item \emph{light}: between 0.5 and 1 (good)
   \item \emph{mid}: between 0.1 and 0.5 (ok)
   \item \emph{dark}: below 0.1 (maybe too low)
 }
}
\item{\code{mcmc_acf}}{
Grid of autocorrelation plots by chain and parameter. The \code{lags}
argument gives the maximum number of lags at which to calculate the
autocorrelation function. \code{mcmc_acf} is a line plot whereas
\code{mcmc_acf_bar} is a barplot.
}
}
}
\examples{
# autocorrelation
x <- example_mcmc_draws()
dim(x)
dimnames(x)

set_color_scheme("green")
mcmc_acf(x, pars = c("alpha", "beta[1]"))
set_color_scheme("pink")
(p <- mcmc_acf_bar(x, pars = c("alpha", "beta[1]")))

# add tick marks on y axis and horiztonal dashed line at 0.5
p +
 yaxis_ticks() +
 hline_at(0.5, linetype = 2, size = 0.15, color = "gray")


# fake rhat values to use for demonstration
rhat <- c(runif(100, 1, 1.15))
mcmc_rhat_hist(rhat)
mcmc_rhat(rhat)

set_color_scheme("blue")
mcmc_rhat(runif(1000, 1, 1.07))
mcmc_rhat(runif(1000, 1, 1.3)) + move_legend("top") # add legend above plot

# fake neff ratio values to use for demonstration
ratio <- c(runif(100, 0, 1))
mcmc_neff_hist(ratio)
mcmc_neff(ratio)

\dontrun{
# Example using rstanarm model (requires rstanarm package)
library(rstanarm)

# intentionally use small 'iter' so there are some
# problems with rhat and neff for demonstration
fit <- stan_glm(mpg ~ ., data = mtcars, iter = 50)
rhats <- rhat(fit)
ratios <- neff_ratio(fit)
mcmc_rhat(rhats)
mcmc_neff(ratios)

# there's a small enough number of parameters in the
# model that we can display their names on the y-axis
mcmc_neff(ratios) + yaxis_text()

# can also look at autocorrelation
draws <- as.array(fit)
mcmc_acf(draws, pars = c("wt", "cyl"), lags = 10)

# increase number of iterations and plots look much better
fit2 <- update(fit, iter = 500)
mcmc_rhat(rhat(fit2))
mcmc_neff(neff_ratio(fit2))
mcmc_acf(as.array(fit2), pars = c("wt", "cyl"), lags = 10)
}

}
\references{
Gelman, A. and Rubin, D. B. (1992). Inference from iterative
simulation using multiple sequences. \emph{Statistical Science}. 7(4),
457--472.

Stan Development Team. (2016). \emph{Stan Modeling Language Users
Guide and Reference Manual.} \url{http://mc-stan.org/documentation/}
}
\seealso{
\code{\link{set_color_scheme}} to change the aesthetic theme

Other MCMC: \code{\link{MCMC-combos}},
  \code{\link{MCMC-distributions}},
  \code{\link{MCMC-intervals}}, \code{\link{MCMC-nuts}},
  \code{\link{MCMC-overview}},
  \code{\link{MCMC-scatterplots}},
  \code{\link{MCMC-traces}}
}

