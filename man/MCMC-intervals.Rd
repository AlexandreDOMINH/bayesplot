% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc-intervals.R
\name{MCMC-intervals}
\alias{MCMC-intervals}
\alias{mcmc_areas}
\alias{mcmc_intervals}
\title{Plot interval estimates from MCMC draws}
\usage{
mcmc_intervals(x, pars = character(), regex_pars = character(),
  transformations = list(), ..., prob = 0.5, prob_outer = 0.9,
  point_est = c("median", "mean", "none"), rhat = numeric())

mcmc_areas(x, pars = character(), regex_pars = character(),
  transformations = list(), ..., prob = 0.5, prob_outer = 1,
  point_est = c("median", "mean", "none"), rhat = numeric())
}
\arguments{
\item{x}{A 3-D array, matrix, or data frame of posterior draws:
\itemize{
 \item \strong{3-D array}: An \code{\link{array}} with dimensions
 \code{[Iteration, Chain, Parameter]} in that order.
 \item \strong{matrix}: A \code{\link{matrix}} with one column per
 parameter. If \code{x} is a matrix then there should only be a single
 Markov chain or all chains should already be merged (stacked).
 \item \strong{data frame}: There are two types of data frames allowed.
 Either a data frame with one column per parameter (if only a single chain or
 all chains have already been merged), or a data frame with one column per
 parameter plus an additional column \code{"Chain"} that contains the chain
 number (an integer) corresponding to each row in \code{x}.
 \item \strong{list}: A \code{list} of matrices, where each matrix
 corresponds to a Markov chain. All of the matrices should have the same
 number of iterations (rows) and parameters (columns), and parameters should
 have the same names and be in the same order.
}}

\item{pars}{An optional character vector of parameter names. If neither
\code{pars} nor \code{regex_pars} is specified then the default is to use
\emph{all} parameters.}

\item{regex_pars}{An optional \link[=grep]{regular expression} to use for
parameter selection. Can be specified instead of \code{pars} or in addition
to \code{pars}. If neither \code{pars} nor \code{regex_pars} is specified
then the default is to use \emph{all} parameters.}

\item{transformations}{An optional named list specifying transformations to
apply to parameters. The name of each list element should be a parameter
name and the content of each list element should be a function (or any item
to match as a function via \code{\link{match.fun}}, e.g. a string naming a
function). If a function in the list of transformations is specified by its
name as a string (e.g. \code{"log"}), then it can be used to construct a
new parameter label for the appropriate parameter (e.g.
\code{"log(sigma)"}). If a function itself is specified (e.g. \code{log} or
\code{function(x) log(x)}) then \code{"t"} is used in the new parameter
label to indicate that the parameter is transformed (e.g.
\code{"t(sigma)"}).}

\item{...}{Currently unused.}

\item{prob}{The probability mass to include in inner interval (for
\code{mcmc_intervals}) or in the shaded region (for \code{mcmc_areas}). The
default is \code{0.5} (50\% interval).}

\item{prob_outer}{The probability mass to include in outer interval. The
default is \code{0.9} for \code{mcmc_intervals} (90\% interval)
and \code{1} for \code{mcmc_areas}.}

\item{point_est}{The point estimate to show. Either \code{"median"} (the
default), \code{"mean"}, or \code{"none"}.}

\item{rhat}{An optional numeric vector of \eqn{\hat{R}}{Rhat} estimates, with
one element per parameter included in \code{x}. If \code{rhat} is provided,
the intervals/areas and point estimates in the resulting plot are colored
based on \eqn{\hat{R}}{Rhat} value. See \code{\link{r_hat}} for methods for
extracting \eqn{\hat{R}}{Rhat} estimates.}
}
\value{
A ggplot object that can be further customized using the
  \pkg{ggplot2} package.
}
\description{
Plot interval estimates from MCMC draws
}
\section{Plot Descriptions}{

\describe{
  \item{\code{mcmc_intervals}}{
   Plots of uncertainty intervals computed from posterior draws with all
   chains merged.
  }
  \item{\code{mcmc_areas}}{
   Density plots computed from posterior draws with all chains merged,
   with uncertainty intervals shown as shaded areas under the curves.
  }
}
}
\examples{
# some fake parameter draws to use for demonstration
x <- fake_draws()
dim(x)
dimnames(x)

mcmc_intervals(x)
mcmc_areas(x)

# can modify plot object using ggplot2 functions
mcmc_areas(x, prob = 0.8) +
 ggplot2::ggtitle("Posterior medians & 80\% intervals")

# same plot but with sigma on the log scale
(p <- mcmc_areas(x, prob = 0.8, transformations = list(sigma = log)))
y_labs <- expression(alpha, log(sigma), beta[1], beta[2])
p + ggplot2::scale_y_continuous(breaks = 4:1, labels = y_labs)


# color by rhat value
fake_rhat_values <- c(1, 1.07, 1.3, 1.01)
mcmc_intervals(x, rhat = fake_rhat_values)
set_color_scheme("blue")
mcmc_intervals(x, rhat = fake_rhat_values)

\dontrun{
# example using fitted model from rstanarm package
library(rstanarm)
fit <- stan_glm(mpg ~ 0 + wt + factor(cyl), data = mtcars, iter = 500)
x <- as.matrix(fit)

set_color_scheme("teal")
mcmc_intervals(x, point_est = "mean", prob = 0.8, prob_outer = 0.95)
mcmc_areas(x, regex_pars = "cyl")
}


}
\seealso{
\code{\link{set_color_scheme}} to change the aesthetic theme

Other MCMC: \code{\link{MCMC-combos}},
  \code{\link{MCMC-diagnostics}},
  \code{\link{MCMC-distributions}},
  \code{\link{MCMC-nuts}}, \code{\link{MCMC-overview}},
  \code{\link{MCMC-pairs}}, \code{\link{MCMC-traces}}
}

