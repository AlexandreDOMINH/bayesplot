% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc-combo.R
\name{MCMC-combos}
\alias{MCMC-combos}
\alias{mcmc_combo}
\title{Combination plots}
\usage{
mcmc_combo(x, combo = c("trace", "dens"), widths = NULL, plot = TRUE,
  gg_theme = NULL, ...)
}
\arguments{
\item{x}{A 3-D array, matrix, or data frame of posterior draws:
\itemize{
 \item \strong{3-D array}: An \code{\link{array}} with dimensions
 \code{[Iteration, Chain, Parameter]} in that order.
 \item \strong{matrix}: A \code{\link{matrix}} with one column per
 parameter. If \code{x} is a matrix then there should only be a single
 Markov chain or all chains should already be merged (stacked).
 \item \strong{data frame}: There are two types of data frames allowed.
 Either a data frame with one column per parameter (if only a single chain or
 all chains have already been merged), or a data frame with one column per
 parameter plus an additional column \code{"Chain"} that contains the chain
 number (an integer) corresponding to each row in \code{x}.
 \item \strong{list}: A \code{list} of matrices, where each matrix
 corresponds to a Markov chain. All of the matrices should have the same
 number of iterations (rows) and parameters (columns), and parameters should
 have the same names and be in the same order.
}}

\item{combo}{A character vector with at least two elements. Each element of
\code{combo} corresponds to a column in the resulting graphic and should be
the name of one of the available \link{MCMC} functions (omitting the
\code{mcmc_} prefix).}

\item{widths}{A numeric vector the same length as \code{combo} specifying
relative column widths. For example, if the plot has two columns, then
\code{widths = c(2, 1)} will allocate more space for the first column by a
factor of 2 (as would \code{widths = c(.3, .15)}, etc.). The default,
\code{NULL}, allocates the same horiztonal space for each column.}

\item{plot}{A logical value indicating whether or not to display the plots.
If \code{plot} is \code{FALSE} then the object is returned invisibly
without plotting.}

\item{gg_theme}{Unlike most of the other \pkg{bayesplot} functions,
\code{mcmc_combo} returns a gtable object rather than a ggplot object, and
so theme objects can't be added directly to the returned plot object. The
\code{gg_theme} argument helps get around this problem by accepting a
\pkg{ggplot2} \link[ggplot2]{theme} object that is applied to each of the
plots \emph{before} combining them into the gtable object that is returned.
This can be a theme object created by a call to \code{ggplot2::theme} or
one of the \pkg{bayesplot} convenience functions, e.g.
\code{\link{no_legend}} (see the \strong{Examples} section, below).}

\item{...}{Arguments passed to the plotting functions named in \code{combo}.}
}
\value{
A gtable object (the result of calling
  \code{\link[gridExtra]{arrangeGrob}}) with \code{length(combo)} columns and
  a row for each parameter.
}
\description{
Combination plots
}
\examples{
# some parameter draws to use for demonstration
x <- example_mcmc_draws()
dim(x)
dimnames(x)

set_color_scheme("blue")
mcmc_combo(x, pars = c("alpha", "sigma"))
mcmc_combo(x, pars = c("alpha", "sigma"), widths = c(2, 1))

# change second plot, show log(sigma) instead of sigma,
# and remove the legends
set_color_scheme("mix-blue-red")
mcmc_combo(
 x,
 combo = c("trace", "dens_overlay"),
 pars = c("alpha", "sigma"),
 transformations = list(sigma = "log"),
 gg_theme = no_legend()
)

# same thing but this time also change the entire ggplot theme
mcmc_combo(
 x,
 combo = c("trace", "dens_overlay"),
 pars = c("alpha", "sigma"),
 transformations = list(sigma = "log"),
 gg_theme = ggplot2::theme_gray() + no_legend()
)

}
\seealso{
Other MCMC: \code{\link{MCMC-diagnostics}},
  \code{\link{MCMC-distributions}},
  \code{\link{MCMC-intervals}}, \code{\link{MCMC-nuts}},
  \code{\link{MCMC-overview}},
  \code{\link{MCMC-scatterplots}},
  \code{\link{MCMC-traces}}
}

