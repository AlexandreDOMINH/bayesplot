% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{bayesplot-utilities}
\alias{axis_ticksize}
\alias{bayesplot-utilities}
\alias{facet_text}
\alias{hline_0}
\alias{hline_at}
\alias{lbub}
\alias{move_legend}
\alias{no_legend}
\alias{vline_0}
\alias{vline_at}
\alias{xaxis_text}
\alias{yaxis_text}
\title{Convenience functions for adding or changing plot details}
\usage{
vline_at(v, fun, ...)

hline_at(v, fun, ...)

vline_0(...)

hline_0(...)

lbub(p, med = TRUE)

axis_ticksize(ticksize = 0)

no_legend()

move_legend(position = "right")

xaxis_text(on = TRUE, ...)

yaxis_text(on = TRUE, ...)

facet_text(on = TRUE, ...)
}
\arguments{
\item{v}{Either a numeric vector specifying the \code{v}alue(s) at which to
draw the vertical or horizontal line(s), or an object of any type to use as
the first argument to \code{fun}.}

\item{fun}{A function, or the name of a function, that returns a numeric
vector.}

\item{...}{For the \code{vline_} and \code{hline_} functions, \code{...} can
  be arguments passed to \code{\link[ggplot2]{geom_vline}} or
  \code{\link[ggplot2]{geom_hline}} to control the appearance of the line(s).

  For \code{xaxis_text} and \code{yaxis_text}, \code{...} can be arguments
  passed to \code{\link[ggplot2]{element_text}} if \code{on = TRUE}.}

\item{p}{The probability mass (in [0,1]) to include in the interval.}

\item{med}{Should the median also be included in addition to the lower
and upper bounds of the interval?}

\item{ticksize}{A value to use for the \code{size} argument of
\code{\link[ggplot2]{element_line}}. The default of zero means
no tick marks.}

\item{position}{The position of the legend. Either a numeric vector (of
length 2) giving the relative coordinates (between 0 and 1) for the legend,
or a string among \code{"right"}, \code{"left"}, \code{"top"},
\code{"bottom"}. Using \code{position = "none"} is also allowed and is
equivalent to using \code{no_legend()}.}

\item{on}{On/off switch. On if \code{TRUE}.}
}
\value{
\describe{
\item{\code{vline_at}, \code{hline_at}}{
\code{vline_at} and \code{hline_at} return an object created by either
\code{geom_vline} or \code{geom_hline} that can be added to a ggplot object
to draw a vertical or horizontal line (at one or several values). If
\code{fun} is missing then the lines are drawn at the values in \code{v}. If
\code{fun} is specified then the lines are drawn at the values returned by
\code{fun(v)}.

\code{vline_0} and \code{hline_0} are wrappers for \code{vline_at} and
\code{hline_at} with \code{v = 0} and \code{fun} missing.
}
\item{\code{lbub}}{
\code{lbub} returns a \emph{function} that takes a single
argument \code{x} and returns the lower and upper bounds (\code{lb},
\code{ub}) of the \code{100*p}\% central interval of \code{x}, as well as the
median (if \code{med} is \code{TRUE}).
}
\item{\code{facet_text}}{
\code{facet_text} returns a ggplot2 theme object that can be added to an
existing plot (ggplot object) to format the text in facet labels.
}
\item{\code{axis_ticksize}}{
\code{axis_ticksize} returns a ggplot2
theme object that can be added to an existing plot (ggplot object) to change
the size of the axis tick marks.
}
\item{\code{move_legend}, \code{no_legend}}{
\code{move_legend} and \code{no_legend} return a ggplot2 theme object that
can be added to an existing plot (ggplot object) in order to change the
position of the legend (\code{move_legend}) or remove the legend
(\code{no_legend}).
}
\item{\code{xaxis_text}, \code{yaxis_text}}{
\code{xaxis_text} and \code{yaxis_text} return a ggplot2 theme object that
can be added to an existing plot (ggplot object) in order to toggle or format
the text displayed on the \code{x} or \code{y} axis. These functions do not
affect the axis \emph{titles}.
}
}
}
\description{
Convenience functions for adding or changing details of plots that are ggplot
objects.
}
\examples{
set_color_scheme("gray")
x <- fake_draws(chains = 1)
dim(x)
colnames(x)

(p <- mcmc_intervals(x))

### vertical line at 0
p + vline_0()
p + vline_0(size = 0.15, color = "maroon")


### vertical line(s) at specified values
p + vline_at(c(-1, 0, 1), linetype = 3)

my_lines <- vline_at(
  v = c(-1, 0, 1),
  color = c("maroon", "skyblue", "violet"),
  size = 0.75 * c(1, 2, 1),
  alpha = 0.25
)
p + my_lines

### vertical line(s) at computed values
p + vline_at(x, colMeans)
p + vline_at(x, "colMeans",
             lty = 2, color = "seagreen", size = 0.25)
p + vline_at(x, function(a) apply(a, 2, mean),
             color = rainbow(ncol(x)), size = 0.25)


### using the lbub function
set_color_scheme("blue")
(p2 <- mcmc_hist(x, pars = "beta[1]"))

b1 <- x[, "beta[1]"]
p2 + vline_at(b1, fun = lbub(0.8))
p2 + vline_at(b1, lbub(0.8, med = FALSE))

p2 +
 vline_at(
   b1,
   lbub(0.5),
   color = "red4",
   lty = c(2, 1, 2),
   size = .5 * c(1,2,1)
 )

### control font size of facet text
p2 + facet_text(size = rel(1.5)) # increase by factor of 1.5
p2 + facet_text(size = 15) # set to 15pt

### format or turn off axis text
p2 + xaxis_text(FALSE)
p2 + xaxis_text(size = 8)
p2 + xaxis_text(size = rel(1.2))

### control size of axis tick marks
p2 + axis_ticksize(.25)


}

